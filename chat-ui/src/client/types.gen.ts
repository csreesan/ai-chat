// This file is auto-generated by @hey-api/openapi-ts

export type Thread = {
    id: string;
    name: string;
    created_at: string;
};

/**
 * Available AI models
 */
export type Model = 'gpt-3.5-turbo' | 'gpt-4-turbo' | 'gpt-4o' | 'gpt-4o-mini' | 'gpt-4.5-preview' | 'o1' | 'o1-mini' | 'o3-mini' | 'claude-2.1' | 'claude-3-opus-20240229' | 'claude-3-5-haiku-20241022' | 'claude-3-5-sonnet-20241022' | 'claude-3-7-sonnet-20250219';

/**
 * The role of the message sender
 */
export type Role = 'user' | 'ai';

export type ChatMessage = {
    /**
     * The text content of the message
     */
    content: string;
    role: Role;
    model?: Model;
};

export type SubmitChatMessageRequest = {
    content: string;
    model: Model;
};

export type _Error = {
    code: string;
    message: string;
};

export type SubmitChatMessageCompareRequest = {
    /**
     * The text content of the message
     */
    content: string;
    /**
     * The models to use for comparison
     */
    models: Array<Model>;
};

export type SubmitChatMessageSelectRequest = {
    comparison_message_id: string;
    selected_model: Model;
};

export type GetChatMessagesData = {
    body?: never;
    path: {
        /**
         * The unique identifier of the thread
         */
        thread_id: string;
    };
    query?: never;
    url: '/thread/{thread_id}/chat';
};

export type GetChatMessagesResponses = {
    /**
     * Chat messages
     */
    200: Array<ChatMessage>;
};

export type GetChatMessagesResponse = GetChatMessagesResponses[keyof GetChatMessagesResponses];

export type SubmitChatMessageData = {
    body: SubmitChatMessageRequest;
    path: {
        /**
         * The unique identifier of the thread
         */
        thread_id: string;
    };
    query?: never;
    url: '/thread/{thread_id}/chat';
};

export type SubmitChatMessageErrors = {
    /**
     * Invalid input
     */
    400: _Error;
};

export type SubmitChatMessageError = SubmitChatMessageErrors[keyof SubmitChatMessageErrors];

export type SubmitChatMessageResponses = {
    /**
     * Chat message response
     */
    200: ChatMessage;
};

export type SubmitChatMessageResponse = SubmitChatMessageResponses[keyof SubmitChatMessageResponses];

export type SubmitChatMessageCompareData = {
    body: SubmitChatMessageCompareRequest;
    path: {
        /**
         * The unique identifier of the thread
         */
        thread_id: string;
    };
    query?: never;
    url: '/thread/{thread_id}/chat/compare';
};

export type SubmitChatMessageCompareErrors = {
    /**
     * Invalid input
     */
    400: _Error;
};

export type SubmitChatMessageCompareError = SubmitChatMessageCompareErrors[keyof SubmitChatMessageCompareErrors];

export type SubmitChatMessageCompareResponses = {
    /**
     * Server-Sent Events stream containing model responses
     */
    200: Blob | File;
};

export type SubmitChatMessageCompareResponse = SubmitChatMessageCompareResponses[keyof SubmitChatMessageCompareResponses];

export type SubmitChatMessageSelectData = {
    body: SubmitChatMessageSelectRequest;
    path: {
        thread_id: string;
    };
    query?: never;
    url: '/thread/{thread_id}/chat/compare/select';
};

export type SubmitChatMessageSelectErrors = {
    /**
     * Invalid input
     */
    400: _Error;
};

export type SubmitChatMessageSelectError = SubmitChatMessageSelectErrors[keyof SubmitChatMessageSelectErrors];

export type SubmitChatMessageSelectResponses = {
    /**
     * Success
     */
    200: unknown;
};

export type GetThreadsData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/thread';
};

export type GetThreadsResponses = {
    /**
     * Threads
     */
    200: Array<Thread>;
};

export type GetThreadsResponse = GetThreadsResponses[keyof GetThreadsResponses];

export type CreateThreadData = {
    body?: never;
    path?: never;
    query?: never;
    url: '/thread';
};

export type CreateThreadResponses = {
    /**
     * Thread created
     */
    200: Thread;
};

export type CreateThreadResponse = CreateThreadResponses[keyof CreateThreadResponses];

export type ClientOptions = {
    baseUrl: 'https://chat.chrissreesangkom.com/api' | 'http://localhost:8000' | (string & {});
};