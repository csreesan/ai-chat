openapi: 3.0.3
info:
  title: Simple Chat API
  description: API for a chat application with a single endpoint
  version: 1.0.0
  
servers:
  - url: https://chat.chrissreesangkom.com/api
    description: Production server
  - url: http://localhost:8000
    description: Development server

paths:
  /thread/{thread_id}/chat:
    parameters:
      - name: thread_id
        in: path
        required: true
        schema:
          type: string
        description: The unique identifier of the thread
    get:
      summary: Get all chat messages
      operationId: getChatMessages
      tags:
        - Chat
      responses:
        '200':
          description: Chat messages
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ChatMessage'
    post:
      summary: Submit a chat message and get a response
      operationId: submitChatMessage
      tags:
        - Chat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubmitChatMessageRequest'
      responses:
        '200':
          description: Chat message response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChatMessage'
        '400':
          description: Invalid input
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /thread:
    post:
      summary: Create a new thread
      operationId: createThread
      tags:
        - Chat
      responses:
        '200':
          description: Thread created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Thread'
    get:
      summary: Get all threads
      operationId: getThreads
      tags:
        - Chat
      responses:
        '200':
          description: Threads
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Thread'
                    
components:
  schemas:
    Thread:
      type: object
      required:
        - id
        - name
        - created_at
      properties:
        id:
          type: string
        name:
          type: string
        created_at:
          type: string
          format: date-time
    ChatMessage:
      type: object
      required:
        - content
        - role
      properties:
        content:
          type: string
          description: The text content of the message
        role:
          type: string
          description: The role of the message sender
          enum:
            - user
            - ai
        model:
          type: string
          description: The model used to generate the message
    SubmitChatMessageRequest:
      type: object
      required:
        - content
        - model
      properties:
        content:
          type: string
        model:
          type: string
          description: The model to use for the chat message
          enum:
            - gpt-4o-mini
            - gpt-4o
            - claude-3-7-sonnet-20250219
            - claude-3-5-sonnet-20241022
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
        message:
          type: string
